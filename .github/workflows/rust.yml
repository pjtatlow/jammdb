name: Build && Test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Run checks
        run: |
          cargo fmt --check
          cargo clippy $CLIPPY_OPTS

  test-win:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - i686-pc-windows-gnu
          - i686-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable-${{ matrix.target }}

      - name: Run tests
        run: cargo test --verbose

  test-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable-x86_64-apple-darwin

      - name: Run tests
        run: cargo test --verbose

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable-${{ matrix.target }}

      - name: Install multilib
        if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo apt install gcc-multilib

      - name: Run tests
        run: cargo test --verbose

  test-msrv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.36.0

      - name: Run tests
        run: cargo test --verbose
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Install stable toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           override: true

#       - name: Run tests
#         run: cargo test --verbose
# - name: Run cargo-tarpaulin
#   uses: actions-rs/tarpaulin@v0.1
#   with:
#     version: "0.15.0"
#     args: "-- --test-threads 1"
# - name: Upload to codecov.io
#   uses: codecov/codecov-action@v1.0.2
#   with:
#     token: ${{ secrets.CODECOV_IO_TOKEN }}
# - name: Archive code coverage results
#   uses: actions/upload-artifact@v1
#   with:
#     name: code-coverage-report
#     path: cobertura.xml
